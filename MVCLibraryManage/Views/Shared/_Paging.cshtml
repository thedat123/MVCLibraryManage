@*
    Model:
      - currentPage:int - Trang hiện tại
      - countPages:int - tổng số trang
      - generateUrl:delegate Func<int?, string> trả về URL tương ứng với trang p (1,2,3 ...)
*@

@model PagingModel
@{
    int currentPage = Model.CurrentPage;
    int countPages = Model.TotalPages;
    var generateUrl = Model.GenerateUrl;

    if (currentPage > countPages)
        currentPage = countPages;

    if (countPages <= 1) return;


    int? preview = null;
    int? next = null;

    if (currentPage > 1)
        preview = currentPage - 1;

    if (currentPage < countPages)
        next = currentPage + 1;

    // Các trang hiện thị trong điều hướng
    List<int> pagesRanges = new List<int>();


    int delta = 5;             // Số trang mở rộng về mỗi bên trang hiện tại
    int remain = delta * 2;     // Số trang hai bên trang hiện tại

    pagesRanges.Add(currentPage);
    // Các trang phát triển về hai bên trang hiện tại
    for (int i = 1; i <= delta; i++)
    {
        if (currentPage + i <= countPages)
        {
            pagesRanges.Add(currentPage + i);
            remain--;
        }

        if (currentPage - i >= 1)
        {
            pagesRanges.Insert(0, currentPage - i);
            remain--;
        }

    }
    // Xử lý thêm vào các trang cho đủ remain
    //(xảy ra ở đầu mút của khoảng trang không đủ trang chèn  vào)
    if (remain > 0)
    {
        if (pagesRanges[0] == 1)
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.Last() + 1 <= countPages)
                {
                    pagesRanges.Add(pagesRanges.Last() + 1);
                }
            }
        }
        else
        {
            for (int i = 1; i <= remain; i++)
            {
                if (pagesRanges.First() - 1 > 1)
                {
                    pagesRanges.Insert(0, pagesRanges.First() - 1);
                }
            }
        }
    }

}
@* PHÁT SINH HTML*@
<link rel="stylesheet" href="~/css/base.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css">
<link rel="stylesheet" href="~/css/paging.css" asp-append-version="true" />
<div class="page-pagination" style="
    display: flex;
    justify-content: center;
">
    <ul class="pagination">
        <!-- Previous page link -->
        @if (preview != null)
        {
            <li class="page-item">
                <a class="page-link" href="@generateUrl(preview)"><i class="fas fa-angle-double-left"></i></a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true"><i class="fas fa-angle-double-left"></i></a>
            </li>
        }

        <!-- Numbered page links -->
        @foreach (var pageitem in pagesRanges)
        {
            if (pageitem != currentPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@generateUrl(pageitem)">
                        @pageitem
                    </a>
                </li>
            }
            else
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#" style="background-color: var(--main-color); color: var(--white-color)">@pageitem <span class="sr-only">(current)</span></a>
                </li>
            }
        }

        <!-- Next page link -->
        @if (next != null)
        {
            <li class="page-item">
                <a class="page-link" href="@generateUrl(next)"><i class="fas fa-angle-double-right"></i></a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true"><i class="fas fa-angle-double-right"></i></a>
            </li>
        }
    </ul>
</div>